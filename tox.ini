[tox]
envlist = py{310,311,312}, lint, type, security, docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
deps = 
    -e.[test]
commands = 
    pytest {posargs}

[testenv:lint]
deps = 
    ruff
    black
commands = 
    ruff check src tests
    black --check src tests

[testenv:format]
deps = 
    ruff
    black
commands = 
    black src tests
    ruff --fix src tests

[testenv:type]
deps = 
    -e.[dev]
    mypy
commands = 
    mypy src

[testenv:security]
deps = 
    -e.[security]
    bandit[toml]
    safety
commands = 
    bandit -r src/ -ll
    safety check

[testenv:docs]
deps = 
    -e.[docs]
commands = 
    mkdocs build --strict

[testenv:docs-serve]
deps = 
    -e.[docs]
commands = 
    mkdocs serve

[testenv:mutation]
deps = 
    -e.[dev]
    mutmut
commands = 
    mutmut run --paths-to-mutate src/

[testenv:coverage]
deps = 
    -e.[test]
    coverage[toml]
commands = 
    coverage run -m pytest
    coverage report
    coverage html

[testenv:benchmark]
deps = 
    -e.[test]
commands = 
    python benchmarks/benchmark_generation.py
    python benchmarks/benchmark_evaluation.py

[testenv:clean]
deps = 
commands = 
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.mypy_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.ruff_cache', ignore_errors=True)"